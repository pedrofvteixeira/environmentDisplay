{
 "layout": {
  "title": "variableInfo",
  "rows": [
   {
    "id": "b289878b-b497-6f18-7208-4de3d2c35f84",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "projectCSS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/EnvironmentDisplay/static/custom/css/environmentDisplay.css",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     }
    ]
   },
   {
    "id": "773718cc-497c-02c8-897b-35767e3e4760",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "rowTitle",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "environmentDisplayMainHeader",
      "type": "String"
     }
    ]
   },
   {
    "id": "bcf7bf5b-0c51-6cf8-3b55-5c1eda4f112e",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "773718cc-497c-02c8-897b-35767e3e4760",
    "properties": [
     {
      "name": "name",
      "value": "title",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "22",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "db3a1c6e-3347-1aae-7f3d-adf28e1de2f4",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "bcf7bf5b-0c51-6cf8-3b55-5c1eda4f112e",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "Pentaho Environment Information ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "a562123e-7677-ce61-afea-c41bfe039d04",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "773718cc-497c-02c8-897b-35767e3e4760",
    "properties": [
     {
      "name": "name",
      "value": "refreshObj",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "1",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "refreshButton",
      "type": "String"
     }
    ]
   },
   {
    "id": "1d86effb-c6d2-cdef-0710-cd4ab022ac79",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "773718cc-497c-02c8-897b-35767e3e4760",
    "properties": [
     {
      "name": "name",
      "value": "exportObj",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "1",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "exportTableButton",
      "type": "String"
     }
    ]
   },
   {
    "id": "865559a2-22d3-8560-78f2-8dce53a91fe0",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "Description",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "2ac68c6a-6373-a02c-3bf4-5f7dda674c8b",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "865559a2-22d3-8560-78f2-8dce53a91fe0",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "<p>\n    The following table shows several system and session environment information\n    useful for development and debugging. Even though it's not sensitive information, \n    it's not recommended to have this plugin installed in a production environment\n</p> ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "ba2e59d8-9aae-1b08-24a0-88cdf830f56d",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "contentObj",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "d94002b2-7c46-c39f-dd2f-127127a5aa3f",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "ba2e59d8-9aae-1b08-24a0-88cdf830f56d",
    "properties": [
     {
      "name": "name",
      "value": "contantWrapperRow",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "24",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "4db996e5-e8f7-a1fe-31df-030697cf8af1",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "d94002b2-7c46-c39f-dd2f-127127a5aa3f",
    "properties": [
     {
      "name": "name",
      "value": "tableObj",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "98331e9b-0428-b197-4f93-bef320c568c2",
    "type": "LayoutSpace",
    "typeDesc": "Space",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "height",
      "value": "100",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Others",
      "type": "Label"
     }
    ]
   },
   {
    "id": "8fee61e9-dc25-b728-08dd-68a191cfab3c",
    "type": "ComponentsTable",
    "typeDesc": "table Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "variableTable",
      "type": "Id"
     },
     {
      "name": "expandContainerObject",
      "value": "",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "['${p:refreshParam}']",
      "type": "Listeners"
     },
     {
      "name": "oLanguage",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "colWidths",
      "value": "[\"0%\",\"30%\",\"70%\"]",
      "type": "Array"
     },
     {
      "name": "colSortable",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "expandParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "colHeaders",
      "value": "[\"Group\",\"Variable\",\"Value\"]",
      "type": "Array"
     },
     {
      "name": "colTypes",
      "value": "[\"groupHeaders\",\"string\",\"string\"]",
      "type": "colTypesCustom"
     },
     {
      "name": "colFormats",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "displayLength",
      "value": "100",
      "type": "Integer"
     },
     {
      "name": "lengthChange",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "expandOnClick",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "paginate",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "filter",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "info",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "sort",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "colSearchable",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "drawCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "dataSource",
      "value": "systemInfo",
      "type": "Datasource"
     },
     {
      "name": "sortBy",
      "value": "[]",
      "type": "SortByArray"
     },
     {
      "name": "sDom",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "paginationType",
      "value": "full_numbers",
      "type": "PaginationType"
     },
     {
      "name": "tableStyle",
      "value": "classic",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:tableObj}",
      "type": "HtmlObject"
     },
     {
      "name": "paginateServerside",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "function f() {\n    $('#tableObjTable_filter > input[type=\"text\"]').attr('placeholder','Search');\n    $('#tableObjTable_filter').contents().filter(function() {\n        return this.nodeType == 3\n    }).each(function(){\n        this.textContent = this.textContent.replace('Search:','');\n    });\n    $('.paging_full_numbers span.first, .paging_full_numbers span.previous, .paging_full_numbers span.next, .paging_full_numbers span.last').text('');\n\n}",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extraOptions",
      "value": "[]",
      "type": "OptionArray"
     },
     {
      "name": "clickAction",
      "value": "",
      "type": "JavaScript"
     }
    ]
   },
   {
    "id": "f226e06f-d237-fd45-a9b8-d61caca92953",
    "type": "ComponentsbuttonComponent",
    "typeDesc": "Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "refresh",
      "type": "Id"
     },
     {
      "name": "label",
      "value": " ",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "actionParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "expression",
      "value": "function f(){\n    \n    Dashboards.fireChange(\"refreshParam\",\"foo\");\n    \n    \n    setTimeout(function(){\n        render_variableTable.dataTable.fnSort([[0,'asc']]);     \n    },500)\n    \n}",
      "type": "JavaScript"
     },
     {
      "name": "successCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "failureCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "Datasource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonStyle",
      "value": "classic",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:refreshObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "548610cc-7d0e-d9b4-f4ae-c48446e4972b",
    "type": "ComponentsexportButton",
    "typeDesc": "Export Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "export",
      "type": "Id"
     },
     {
      "name": "label",
      "value": " ",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "componentName",
      "value": "variableTable",
      "type": "String"
     },
     {
      "name": "outputType",
      "value": "xls",
      "type": "String"
     },
     {
      "name": "htmlObject",
      "value": "${p:exportObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "a9e79adf-7e4f-2a48-30a8-f006531f1926",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "refreshParam",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "foo",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SPARKL_CPKENDPOINTS",
    "name": "SPARKL Endpoints",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SPARKL Endpoints",
      "type": "Label"
     }
    ]
   },
   {
    "id": "931e5957-4014-1090-146b-b7789eea58df",
    "type": "Componentssparkl_getVariableInfo_CPKENDPOINT",
    "typeDesc": "getVariableInfo Endpoint",
    "parent": "SPARKL_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "getVariableInfo",
      "type": "Id"
     },
     {
      "name": "stepName",
      "value": "OUTPUT",
      "type": "String"
     },
     {
      "name": "kettleOutput",
      "value": "Inferred",
      "type": "kettleOutputCustom"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "sparkl",
    "meta_endpoint": "getVariableInfo"
   },
   {
    "id": "SCRIPTING",
    "name": "SCRIPTING Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SCRIPTING Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "6ffb4845-6ced-275f-a446-ba57686784c7",
    "type": "Componentsscriptable_scripting",
    "typeDesc": "scriptable over scripting",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "value": "systemInfo",
      "type": "Id"
     },
     {
      "name": "language",
      "value": "beanshell",
      "type": "String"
     },
     {
      "name": "initscript",
      "value": "",
      "type": "String"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "query",
      "value": "import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\nimport org.pentaho.platform.engine.core.system.*;\nimport org.pentaho.platform.api.engine.*;\nimport org.pentaho.platform.web.http.session.PentahoHttpSession;\nimport java.util.Arrays;\nimport java.util.Locale;\nimport java.util.Map;\nimport java.util.TreeMap;\nimport org.pentaho.reporting.engine.classic.core.ClassicEngineBoot;\nimport org.pentaho.reporting.engine.classic.core.ClassicEngineInfo;\nimport org.pentaho.reporting.engine.classic.core.metadata.DataFactoryRegistry;\nimport org.pentaho.reporting.engine.classic.core.metadata.ElementTypeRegistry;\nimport org.pentaho.reporting.engine.classic.core.metadata.ExpressionRegistry;\nimport org.pentaho.reporting.engine.classic.core.metadata.MetaData;\nimport org.pentaho.reporting.engine.classic.core.util.TypedTableModel;\nimport org.pentaho.reporting.libraries.base.boot.Module;\nimport org.pentaho.reporting.libraries.base.boot.PackageManager;\n\n\nString[] columnNames = new String[3];\ncolumnNames[0] = \"Group\";\ncolumnNames[1] = \"Variable\";\ncolumnNames[2] = \"Value\";\n\nClass[] columnTypes = new Class[3];\ncolumnTypes[0] = String.class;\ncolumnTypes[1] = String.class;\ncolumnTypes[2] = String.class;\n\nTypedTableModel model = new TypedTableModel( columnNames, columnTypes);\n\n/*\n *  Generic functions\n */\n\n  Map collectEngineData()\n  {\n    TreeMap s = new TreeMap();\n    s.put(\"Version\", ClassicEngineInfo.getInstance().getVersion());\n    return s;\n  }\n\n  Map collectModules()\n  {\n    PackageManager packageManager = ClassicEngineBoot.getInstance().getPackageManager();\n    Module[] modules = packageManager.getAllModules();\n    TreeMap s = new TreeMap();\n    for (int i = 0; i < modules.length; i++)\n    {\n      Module module = modules[i];\n      String av = packageManager.isModuleAvailable(module) ? \"Available\" : \"Disabled\";\n      s.put(module.getName(), av);\n    }\n    return s;\n  }\n\n  Map collectData(MetaData[] data)\n  {\n    TreeMap s = new TreeMap();\n    for (int i = 0; i < data.length; i++)\n    {\n      MetaData metaData = data[i];\n      try{\n        s.put(metaData.getDisplayName(Locale.ENGLISH), metaData.getName());\n      }catch(Exception e){\n        System.out.println(\"Failed to collect data for \" + metaData.getName());\n      }\n    }\n    return s;\n  }\n\n  void add (TypedTableModel model, String type, Map map)\n  {\n    String[] keys = (String[]) map.keySet().toArray(new String[map.size()]);\n    Arrays.sort(keys);\n    for (int i = 0; i < keys.length; i++)\n    {\n      String key = keys[i];\n      model.addRow(new Object[]{type, key, map.get(key)});\n    }\n  }\n  \n  String getAttributeValue(Object tmp){\n\n    // System.out.println(\"Attribute: \" + x + \"; Type:\" + tmp.getClass());\n    String val = (tmp != null) ? tmp.toString() : \"null\";\n    String typ = (tmp != null) ? tmp.getClass().toString() : \"null\";\n    \n    return val;\n  }\n  \n  void collectPentahoSessionAttributes (String title, PentahoHttpSession session)\n  {\n  \n    for(java.util.Iterator e2 = session.getAttributeNames();e2.hasNext() ;){\n\n    x = (String)e2.next();\n    tmp = pentahoSession.getAttribute(x);\n    System.out.println(\"  XXXXXXXX \" + x +\" = \"+tmp);\n    //model.addRow( new Object[]{title, val, getAttributeValue(tmp)});\n    }\n\n  }\n\n\n/*\n *  Accessing the variables needed\n */\n\n\n\nThread.currentThread().setContextClassLoader( org.pentaho.platform.engine.core.system.PentahoSessionHolder.class.getClassLoader() );\nfinal IPentahoSession pentahoSession = PentahoSessionHolder.getSession();\n\n\nClassLoader contextCL = Thread.currentThread().getContextClassLoader();\ntry {\n\n    Thread.currentThread().setContextClassLoader( org.pentaho.platform.engine.core.system.PentahoSessionHolder.class.getClassLoader() );\n    final IPentahoSession pentahoSession = PentahoSessionHolder.getSession();\n} catch ( Exception e ) {\n} finally {\n  Thread.currentThread().setContextClassLoader( contextCL );\n}\n\n\n/*\n *  Getting Pentaho Session Info\n */\n\n\nString x = null;\nObject tmp = null;\n\n\nfor(java.util.Iterator e2 = pentahoSession.getAttributeNames();e2.hasNext() ;){\n\n    x = (String)e2.next();\n    tmp = pentahoSession.getAttribute(x);\n    \n\n    System.out.println(\"Attribute: \" + x + \"; Type:\" + tmp.getClass());\n    \n    if(tmp instanceof String){\n        model.addRow( new Object[]{\"Pentaho Session Variable\", x, getAttributeValue(tmp)});\n    }\n    else if(tmp instanceof PentahoHttpSession){\n    \n    }\n    else{\n        //System.out.println(\"Name: \" + x + \"; Class: \" + tmp.getClass().getName() );\n        model.addRow( new Object[]{\"Pentaho Session Variable\", x, getAttributeValue(tmp)});\n    }\n}\n\n/*\n *  Get generic info\n */\n\n\nmodel.addRow( new Object[]{\"Runtime Information\", \"Processors\", Runtime.getRuntime().availableProcessors()});\nmodel.addRow( new Object[]{\"Runtime Information\", \"Max Memory\", Runtime.getRuntime().maxMemory()});\nmodel.addRow( new Object[]{\"Runtime Information\", \"Total Memory\", Runtime.getRuntime().totalMemory()});\n\n\n/*\n *  HttpSession Info\n */\n\njava.lang.reflect.Field field = pentahoSession.getClass().getDeclaredField(\"session\");\nfield.setAccessible(true); // this basically overrides the private setting in the PentahoHttpSession class\njavax.servlet.http.HttpSession httpSession = (javax.servlet.http.HttpSession)field.get(pentahoSession);\n\nfor(java.util.Enumeration e3 = httpSession.getServletContext().getInitParameterNames(); e3.hasMoreElements() ;){\n    x = (String)e3.nextElement();\n    tmp = httpSession.getServletContext().getInitParameter(x);\n    model.addRow( new Object[]{\"Pentaho Servlet Context Init Attribute\", x, tmp});\n}\n\n\n/*\n *  Get reporting info\n */\n\n\nadd(model, \"System Properties\", System.getProperties());\nadd(model, \"Environment\", System.getenv());\nadd(model, \"Reporting Engine\", collectEngineData());\nadd(model, \"Reporting Modules\", collectModules());\n//add(model, \"Reporting Data-Factories\", collectData(DataFactoryRegistry.getInstance().getAll()));\nadd(model, \"Reporting Elements\", collectData(ElementTypeRegistry.getInstance().getAllElementTypes()));\nadd(model, \"Reporting Expressions\", collectData(ExpressionRegistry.getInstance().getAllExpressionMetaDatas()));\n\n\nreturn model;",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "false",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "scriptable"
   }
  ]
 },
 "filename": "/system/EnvironmentDisplay/dashboards/admin/EnvironmentDisplay.cdfde"
}